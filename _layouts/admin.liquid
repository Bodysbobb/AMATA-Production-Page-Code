{% unless page.url == "/sitemap.xml" %}
<!doctype html>
<html lang="{{ page.lang | default: site.lang | default: 'th' }}">
  <head>
    {% include head-admin.liquid %}
    {% if page.page_stylesheet %}
      <link rel="stylesheet" href="{{ '/assets/css/' | append: page.page_stylesheet | relative_url | bust_css_cache }}">
    {% endif %}
  </head>

  <body class="admin-body" {% if page.lang %}data-lang="{{ page.lang }}"{% endif %}>
    <div class="admin-wrapper">

      <!-- Admin Header -->
      <div id="navbar-container">
        {% include navbar-admin.liquid %}
      </div>

      <!-- Login Screen -->
      <div class="login-screen" id="login-screen">
        <h2>เข้าสู่ระบบผู้ดูแล</h2>
        <p>กรุณาใส่รหัสผ่านเพื่อเข้าถึงหน้าผู้ดูแลระบบ</p>
        <div class="login-form">
          <div class="form-group">
            <label for="password">รหัสผ่าน</label>
            <input type="password" id="password" class="form-control" placeholder="ใส่รหัสผ่าน">
          </div>
          <button type="button" id="login-button" class="btn btn-primary">เข้าสู่ระบบ</button>
        </div>
      </div>

      <!-- Admin Content -->
      <div class="admin-content" id="admin-content">
        <div class="container mt-5">
          {{ content }}
        </div>
      </div>

    </div>

    <!-- Sticky Full Footer -->
    <footer class="footer-full-admin-bg">
      <div class="footer-inner-wrapper">
        <div class="footer-copyright">
          © {{ site.title }} All rights reserved.
        </div>
      </div>
    </footer>

    <!-- Password injection and JS load -->
    <script>
      {% if jekyll.environment == "development" %}
        window.ADMIN_PASSWORD = "admin123";
      {% else %}
        window.ADMIN_PASSWORD_OBFUSCATED = "{{ site.env.ADMIN_PASSWORD_B64 }}";
      {% endif %}
    </script>
    <script src="{{ '/assets/js/admin-panel.js' | relative_url | bust_js_cache }}"></script>
    <script src="{{ '/assets/js/supabase-sync.js' | relative_url | bust_js_cache }}" defer></script>
    <!-- Add this new debug script -->
    <script>
    // Debug script - Add this to your admin.liquid layout to troubleshoot
    (function() {
      // Add visible debug panel
      const debugPanel = document.createElement('div');
      debugPanel.style.position = 'fixed';
      debugPanel.style.bottom = '0';
      debugPanel.style.right = '0';
      debugPanel.style.width = '400px';
      debugPanel.style.height = 'auto';
      debugPanel.style.maxHeight = '300px';
      debugPanel.style.background = 'rgba(0,0,0,0.8)';
      debugPanel.style.color = 'lime';
      debugPanel.style.padding = '10px';
      debugPanel.style.fontFamily = 'monospace';
      debugPanel.style.fontSize = '12px';
      debugPanel.style.zIndex = '99999';
      debugPanel.style.overflowY = 'auto';
      debugPanel.innerHTML = '<h3>Supabase Debug</h3><div id="debug-log"></div>';
      document.body.appendChild(debugPanel);
      
      // Function to log messages
      function logMessage(msg, data) {
        const logDiv = document.getElementById('debug-log');
        const entry = document.createElement('div');
        entry.innerHTML = `<p>${new Date().toLocaleTimeString()}: ${msg}</p>`;
        if (data) {
          entry.innerHTML += `<pre>${JSON.stringify(data, null, 2)}</pre>`;
        }
        logDiv.insertBefore(entry, logDiv.firstChild);
        console.log(msg, data);
      }
      
      // Monitor localStorage changes
      logMessage('Debug monitor started');
      
      // Show current localStorage state
      const urlClicks = localStorage.getItem('product_url_clicks');
      const lightboxOpens = localStorage.getItem('product_lightbox_opens');
      
      if (urlClicks) {
        logMessage('Current URL clicks', JSON.parse(urlClicks));
      }
      
      if (lightboxOpens) {
        logMessage('Current lightbox opens', JSON.parse(lightboxOpens));
      }
      
      // Test Supabase connection directly
      logMessage('Testing Supabase connection...');
      
      fetch('https://twvwpdzcgtgyysxntill.supabase.co/rest/v1/website_analytics.product_clicks?limit=1', {
        method: 'GET',
        headers: {
          'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR3dndwZHpjZ3RneXlzeG50aWxsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3NTg1MjUsImV4cCI6MjA2MjMzNDUyNX0.8PMguWXxjTZ_9Fjn-mlNIQ01bBLJvVHHN00_R7oWl7c',
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR3dndwZHpjZ3RneXlzeG50aWxsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3NTg1MjUsImV4cCI6MjA2MjMzNDUyNX0.8PMguWXxjTZ_9Fjn-mlNIQ01bBLJvVHHN00_R7oWl7c'
        }
      })
      .then(response => {
        logMessage(`Connection test: ${response.status} ${response.ok ? 'OK' : 'FAILED'}`);
        return response.text();
      })
      .then(text => {
        if (text) {
          logMessage('Response:', text);
        }
      })
      .catch(error => {
        logMessage('Connection error:', error.message);
      });
      
      // Try a direct insert
      const testData = {
        product_id: 'test-product',
        type: 'urlClick',
        category: 'test',
        count: 1,
        timestamp: new Date().toISOString()
      };
      
      logMessage('Trying direct test insert:', testData);
      
      fetch('https://twvwpdzcgtgyysxntill.supabase.co/rest/v1/website_analytics.product_clicks', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR3dndwZHpjZ3RneXlzeG50aWxsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3NTg1MjUsImV4cCI6MjA2MjMzNDUyNX0.8PMguWXxjTZ_9Fjn-mlNIQ01bBLJvVHHN00_R7oWl7c',
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR3dndwZHpjZ3RneXlzeG50aWxsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3NTg1MjUsImV4cCI6MjA2MjMzNDUyNX0.8PMguWXxjTZ_9Fjn-mlNIQ01bBLJvVHHN00_R7oWl7c',
          'Prefer': 'return=minimal'
        },
        body: JSON.stringify([testData])
      })
      .then(response => {
        logMessage(`Test insert: ${response.status} ${response.ok ? 'OK' : 'FAILED'}`);
        return response.text();
      })
      .then(text => {
        if (text) {
          logMessage('Insert response:', text);
        } else {
          logMessage('Insert succeeded');
        }
      })
      .catch(error => {
        logMessage('Insert error:', error.message);
      });
      
      // Override the fetch API to log all requests
      const originalFetch = window.fetch;
      window.fetch = function(url, options) {
        // Only log Supabase calls
        if (url.includes('supabase')) {
          logMessage(`FETCH: ${options?.method || 'GET'} ${url}`, 
            options?.body ? JSON.parse(options.body) : null);
        }
        
        return originalFetch.apply(this, arguments)
          .then(response => {
            if (url.includes('supabase')) {
              logMessage(`RESPONSE: ${response.status}`);
              
              // Clone the response so we can read its text while still returning the original
              const clone = response.clone();
              clone.text().then(text => {
                if (text) {
                  logMessage('RESPONSE BODY:', text);
                }
              });
            }
            return response;
          })
          .catch(error => {
            if (url.includes('supabase')) {
              logMessage(`ERROR: ${error.message}`);
            }
            throw error;
          });
      };
    })();
    </script>
    <!-- Styles -->
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      .admin-body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        background-color: #f9f9f9;
      }

      .admin-wrapper {
        flex: 1;
        display: flex;
        flex-direction: column;
      }

      .admin-content {
        display: none;
        padding-top: 60px; /* adjust to your navbar height if fixed */
      }

      .login-screen {
        max-width: 400px;
        margin: 100px auto;
        padding: 30px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      .login-screen h2 {
        margin-top: 0;
        color: #333;
      }

      .login-form {
        margin-top: 20px;
      }

      .form-group {
        margin-bottom: 15px;
        text-align: left;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
        color: #555;
      }

      .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
        transition: border-color 0.2s;
      }

      .form-control:focus {
        border-color: #3498db;
        outline: none;
      }

      .btn {
        display: inline-block;
        padding: 10px 20px;
        background-color: #3498db;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.2s;
      }

      .btn:hover {
        background-color: #2980b9;
      }

      .footer-full-admin-bg {
        background-color: #001b44;
        color: white;
        text-align: center;
        padding: 0;; 
        font-size: 0.5rem; 
        line-height: 1.2;
        margin-top: auto;
        flex-shrink: 0;
      }

      .footer-inner-wrapper {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 1rem;
      }
    </style>
  </body>
</html>
{% endunless %}
